/**
 *
 * NumericalChameleon 3.0.0 - more than an unit converter - a NumericalChameleon
 * Copyright (c) 2001-2020 Dipl.-Inf. (FH) Johann Nepomuk Loefflmann, All Rights
 * Reserved, <http://www.numericalchameleon.net>.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
package net.numericalchameleon.gui.dialogs.updateapplication;

import java.io.File;
import java.lang.reflect.Method;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.ResourceBundle;

public class AppUpdateDialog extends javax.swing.JDialog {

    private final AppUpdateInterface appUpdateInterface;
    private final ResourceBundle rb;
    
    public AppUpdateDialog(AppUpdateInterface appUpdateInterface) {
        super(appUpdateInterface.getFrame(), true);

        this.appUpdateInterface = appUpdateInterface;
        this.rb = appUpdateInterface.getResourceBundle();
        initComponents();
        setLocationRelativeTo(appUpdateInterface.getFrame());
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        onlineUpdateButton = new javax.swing.JButton();
        offlineUpdateButton = new javax.swing.JButton();
        homepageButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(rb.getString("GUI.General.Update")); // NOI18N

        onlineUpdateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/net/numericalchameleon/resources/icons/pix24x24/earth.png"))); // NOI18N
        onlineUpdateButton.setText(rb.getString("GUI.AppUpdater.onlineUpdate")); // NOI18N
        onlineUpdateButton.setEnabled(false);
        onlineUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onlineUpdateButtonActionPerformed(evt);
            }
        });

        offlineUpdateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/net/numericalchameleon/resources/icons/pix24x24/disk-black.png"))); // NOI18N
        offlineUpdateButton.setText(rb.getString("GUI.AppUpdater.offlineUpdate")); // NOI18N
        offlineUpdateButton.setEnabled(false);
        offlineUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offlineUpdateButtonActionPerformed(evt);
            }
        });

        homepageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/net/numericalchameleon/resources/icons/pix24x24/home.png"))); // NOI18N
        homepageButton.setText(rb.getString("GUI.AppUpdater.homepage")); // NOI18N
        homepageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homepageButtonActionPerformed(evt);
            }
        });

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/net/numericalchameleon/resources/icons/pix16x16/close.png"))); // NOI18N
        closeButton.setText(rb.getString("GUI.General.Close")); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(onlineUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(offlineUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(homepageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closeButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(onlineUpdateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(offlineUpdateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(homepageButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(closeButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    // calls the updater.jar by calling the startJarApplication method that is declared in updater.jar
    public void callUpdater(String[] jvmOptions, String jarfile, String[] progargs) throws Exception {
        URL[] urls = { new File(jarfile).toURI().toURL() };
        URLClassLoader child = new URLClassLoader(urls, this.getClass().getClassLoader());
        Class classToLoad = Class.forName("net.numericalchameleon.updater.Tools", true, child);

        Class[] declaredParams = new Class[]{String[].class, String.class, String[].class};
        Method method = classToLoad.getDeclaredMethod("startJarApplication", declaredParams);
        Object[] invokeParams = new Object[]{ jvmOptions, jarfile, progargs };
        method.invoke(classToLoad.getDeclaredConstructor().newInstance(), invokeParams);
    }
    
    private void onlineUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onlineUpdateButtonActionPerformed
        appUpdateInterface.saveWork();
        appUpdateInterface.dontPanic();
        appUpdateInterface.prepareHardExit();
        // call updater.jar            
        try {
            String[] jvmOptions = { "-Xmx16m" }; // don't waste memory on huge servers due to JVM ergonomics
            String[] args = new String[]{ "http://localhost/update.properties" }; // for test purposes only
            callUpdater(jvmOptions, "updater.jar", args);
        } catch (Exception e) {
            e.printStackTrace();
        }
        // exit the app
        appUpdateInterface.hardExit();
        
    }//GEN-LAST:event_onlineUpdateButtonActionPerformed

    private void offlineUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offlineUpdateButtonActionPerformed
        // open file selector
        // user selects a .zip file
        // call updater.jar -extractFile file -extractToFolder .. -executeAfterUpdate nc.jar
        // exit this app
    }//GEN-LAST:event_offlineUpdateButtonActionPerformed

    private void homepageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homepageButtonActionPerformed
        appUpdateInterface.gotoWebpage("download.html");
    }//GEN-LAST:event_homepageButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton homepageButton;
    private javax.swing.JButton offlineUpdateButton;
    private javax.swing.JButton onlineUpdateButton;
    // End of variables declaration//GEN-END:variables
}
