/**
 *
 * NumericalChameleon 3.0.0 - more than an unit converter - a NumericalChameleon
 * Copyright (c) 2001-2020 Dipl.-Inf. (FH) Johann Nepomuk Loefflmann, All Rights
 * Reserved, <http://www.numericalchameleon.net>.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
package net.numericalchameleon.gui.dialogs.calendarchooser;

import java.text.DateFormat;
import java.util.*;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import jonelo.sugar.gui.GUIHelper;
import jonelo.sugar.util.GeneralString;
import net.numericalchameleon.gui.common.interfaces.DialogInterface;

public class CalendarChooserDialog extends javax.swing.JDialog {
    
    private final ResourceBundle rb;
    private final TimeZone timezone;
    private final CalendarChooserInterface calendarChooserInterface;
    
    public CalendarChooserDialog(DialogInterface dialogInterface, CalendarChooserInterface calendarChooserInterface) {
        super(dialogInterface.getFrame(), true);
        this.calendarChooserInterface = calendarChooserInterface;
//        this.calendar = calendarChooserInterface.getCalcandar();
        this.rb = dialogInterface.getResourceBundle();
        this.timezone = calendarChooserInterface.getTimeZone();
        if (dialogInterface.getFrame().isUndecorated()) {
            setUndecorated(true);
            getRootPane().setWindowDecorationStyle(JRootPane.FRAME);
        }
        initComponents();
        myCalendar.setCalendar(calendarChooserInterface.getCalcandar());
        
        setLocationRelativeTo(dialogInterface.getFrame());
        setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendarPanel = new javax.swing.JPanel();
        myCalendar = new com.toedter.calendar.JCalendar();
        todayButton = new javax.swing.JButton();
        weekOfYearButton = new javax.swing.JButton();
        daysButton = new javax.swing.JButton();
        weeksButton = new javax.swing.JButton();
        monthsButton = new javax.swing.JButton();
        quarterButton = new javax.swing.JButton();
        yearsButton = new javax.swing.JButton();
        labelPanel = new javax.swing.JPanel();
        dateLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        wikipediaButton = new javax.swing.JButton();

        setTitle(rb.getString("GUI.General.DatePicker")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        calendarPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        JComboBox jcb = (JComboBox)((myCalendar.getMonthChooser()).getComboBox()); jcb.setMaximumRowCount(12);
        myCalendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                myCalendarPropertyChange(evt);
            }
        });

        todayButton.setText(rb.getString("GUI.General.Today")); // NOI18N
        todayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todayButtonActionPerformed(evt);
            }
        });

        weekOfYearButton.setText(rb.getString("Calendar.weekOfYear")); // NOI18N
        weekOfYearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weekOfYearButtonActionPerformed(evt);
            }
        });

        daysButton.setText(rb.getString("Calendar.plusMinusDays")); // NOI18N
        daysButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daysButtonActionPerformed(evt);
            }
        });

        weeksButton.setText(rb.getString("Calendar.plusMinusWeeks")); // NOI18N
        weeksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weeksButtonActionPerformed(evt);
            }
        });

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("data/lang/resource"); // NOI18N
        monthsButton.setText(bundle.getString("Calendar.plusMinusMonths")); // NOI18N
        monthsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthsButtonActionPerformed(evt);
            }
        });

        quarterButton.setText(rb.getString("Calendar.plusMinusQuarters")); // NOI18N
        quarterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quarterButtonActionPerformed(evt);
            }
        });

        yearsButton.setText(bundle.getString("Calendar.plusMinusYears")); // NOI18N
        yearsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout calendarPanelLayout = new javax.swing.GroupLayout(calendarPanel);
        calendarPanel.setLayout(calendarPanelLayout);
        calendarPanelLayout.setHorizontalGroup(
            calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(calendarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(myCalendar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(weekOfYearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(todayButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(daysButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(weeksButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(monthsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quarterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(yearsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        calendarPanelLayout.setVerticalGroup(
            calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(calendarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(calendarPanelLayout.createSequentialGroup()
                        .addComponent(todayButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weekOfYearButton)
                        .addGap(21, 21, 21)
                        .addComponent(daysButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weeksButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(monthsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quarterButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(yearsButton))
                    .addComponent(myCalendar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        labelPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        updateLabel((Calendar)myCalendar.getCalendar());
        labelPanel.add(dateLabel);

        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/net/numericalchameleon/resources/icons/pix16x16/close.png"))); // NOI18N
        cancelButton.setText(rb.getString("GUI.General.Close")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/net/numericalchameleon/resources/icons/pix16x16/ok.png"))); // NOI18N
        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        wikipediaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/net/numericalchameleon/resources/icons/pix16x16/wikipedia.png"))); // NOI18N
        wikipediaButton.setText("Wikipedia");
        wikipediaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wikipediaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wikipediaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calendarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(calendarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(wikipediaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(labelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quarterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quarterButtonActionPerformed
         buttonActionPerformed("Calendar.plusMinusQuarters", Calendar.MONTH, 3);
    }//GEN-LAST:event_quarterButtonActionPerformed
    
    private void myCalendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_myCalendarPropertyChange
        if (evt.getPropertyName().equals("calendar")) {
            Calendar cal = (Calendar) evt.getNewValue();
            updateLabel(cal);
            myCalendar.setCalendar(cal);
        }
    }//GEN-LAST:event_myCalendarPropertyChange
    
    private void buttonActionPerformed(String dialogTextID, int field) {
        buttonActionPerformed(dialogTextID, field, 1, false, false);
    }
    
    private void buttonActionPerformed(String dialogTextID, int field, int factor) {
        buttonActionPerformed(dialogTextID, field, factor, false, false);
    }
    
    // factor - how many of the items the user have entered should be actually added to the field?
    // bool - true: dialog is initialized with cal.get(field)
    //        false: dialog is initialized with "+1"
    private void buttonActionPerformed(String dialogTextID, int field, int factor, boolean initWithField, boolean setRatherThanAdd) {
        String s;
        Calendar cal = myCalendar.getCalendar();
        do {
            s = JOptionPane.showInputDialog(this, rb.getString(dialogTextID),
                    initWithField ? String.valueOf(cal.get(Calendar.WEEK_OF_YEAR)) : String.valueOf("+1")
                    );
            
            if (s == null) break;
            try {
                if (s.startsWith("+")) s = s.substring(1, s.length());
                int val = Integer.parseInt(s.trim());

                if (setRatherThanAdd)
                    cal.set(field, val*factor);
                else
                    cal.add(field, val*factor);
                myCalendar.setCalendar(cal);
                updateLabel(cal);

            } catch (NumberFormatException e) {
                s = null;
            }
        } while (s == null);
    }
    
    private void yearsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearsButtonActionPerformed
        buttonActionPerformed("Calendar.plusMinusYears", Calendar.YEAR);
    }//GEN-LAST:event_yearsButtonActionPerformed
    
    private void monthsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthsButtonActionPerformed
        buttonActionPerformed("Calendar.plusMinusMonths", Calendar.MONTH);
    }//GEN-LAST:event_monthsButtonActionPerformed
    
    private void weeksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weeksButtonActionPerformed
        buttonActionPerformed("Calendar.plusMinusWeeks", Calendar.DATE, 7);
    }//GEN-LAST:event_weeksButtonActionPerformed
    
    private void daysButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daysButtonActionPerformed
        buttonActionPerformed("Calendar.plusMinusDays", Calendar.DATE);
    }//GEN-LAST:event_daysButtonActionPerformed
    
    private void weekOfYearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weekOfYearButtonActionPerformed
        buttonActionPerformed("Calendar.weekOfYear", Calendar.WEEK_OF_YEAR, 1, true, true);
    }//GEN-LAST:event_weekOfYearButtonActionPerformed
    
    private void updateLabel(Calendar calendar) {        
        DateFormat df = DateFormat.getDateInstance(DateFormat.FULL, myCalendar.getLocale());
        df.setTimeZone(timezone);
        dateLabel.setText(df.format(calendar.getTime()));
    }
    
    private void todayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todayButtonActionPerformed
        myCalendar.setCalendar(new GregorianCalendar(timezone));
    }//GEN-LAST:event_todayButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        calendarChooserInterface.setCancelled(true);
        closeDialog(null);
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        Calendar cal = myCalendar.getCalendar();
        calendarChooserInterface.getCalcandar().set(cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DATE));
        calendarChooserInterface.setCancelled(false);
        closeDialog(null);
    }//GEN-LAST:event_okButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void wikipediaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wikipediaButtonActionPerformed
        Calendar cal = myCalendar.getCalendar();
        String language = Locale.getDefault().getLanguage();
        String address = GeneralString.wikipediaLinkFromDate(cal, language);
        try {
            GUIHelper.openInBrowser(address);
        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_wikipediaButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel calendarPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton daysButton;
    private javax.swing.JPanel labelPanel;
    private javax.swing.JButton monthsButton;
    private com.toedter.calendar.JCalendar myCalendar;
    private javax.swing.JButton okButton;
    private javax.swing.JButton quarterButton;
    private javax.swing.JButton todayButton;
    private javax.swing.JButton weekOfYearButton;
    private javax.swing.JButton weeksButton;
    private javax.swing.JButton wikipediaButton;
    private javax.swing.JButton yearsButton;
    // End of variables declaration//GEN-END:variables
    
    /*
    private void compactButtonActionPerformed(java.awt.event.ActionEvent evt) {
        this.pack();
        setLocationRelativeTo(this);
    }
     
    private void smallerButtonActionPerformed(java.awt.event.ActionEvent evt) {
        java.awt.Dimension d = getSize();
        double offset = 50.0;
        d.setSize(d.getWidth()-offset,d.getHeight()-offset);
        this.setSize(d);
        setLocationRelativeTo(this);
    }
     
    private void largerButtonActionPerformed(java.awt.event.ActionEvent evt) {
        java.awt.Dimension d = getSize();
        double offset = 50.0;
        d.setSize(d.getWidth()+offset,d.getHeight()+offset);
        this.setSize(d);
        setLocationRelativeTo(this);
    }
     */
    
}
